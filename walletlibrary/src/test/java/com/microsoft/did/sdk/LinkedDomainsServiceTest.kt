// Copyright (c) Microsoft Corporation. All rights reserved

package com.microsoft.did.sdk

import com.microsoft.did.sdk.credential.service.models.linkedDomains.LinkedDomainMissing
import com.microsoft.did.sdk.credential.service.models.linkedDomains.LinkedDomainUnVerified
import com.microsoft.did.sdk.credential.service.models.linkedDomains.LinkedDomainVerified
import com.microsoft.did.sdk.credential.service.models.serviceResponses.LinkedDomainsResponse
import com.microsoft.did.sdk.credential.service.validators.JwtDomainLinkageCredentialValidator
import com.microsoft.did.sdk.credential.service.validators.JwtValidator
import com.microsoft.did.sdk.datasource.network.linkedDomainsOperations.FetchWellKnownConfigDocumentNetworkOperation
import com.microsoft.did.sdk.di.defaultTestSerializer
import com.microsoft.did.sdk.identifier.models.identifierdocument.IdentifierResponse
import com.microsoft.did.sdk.identifier.resolvers.Resolver
import com.microsoft.did.sdk.util.controlflow.Result
import io.mockk.coEvery
import io.mockk.coVerify
import io.mockk.mockk
import io.mockk.mockkConstructor
import io.mockk.spyk
import kotlinx.coroutines.runBlocking
import org.assertj.core.api.Assertions.assertThat
import org.junit.Test
import java.net.URI

class LinkedDomainsServiceTest {
    private val mockedResolver: Resolver = mockk()
    private val mockedJwtValidator: JwtValidator = mockk()
    private val mockedJwtDomainLinkageCredentialValidator: JwtDomainLinkageCredentialValidator =
        JwtDomainLinkageCredentialValidator(mockedJwtValidator, defaultTestSerializer)
    private val linkedDomainsService: LinkedDomainsService =
        spyk(LinkedDomainsService(mockk(relaxed = true), mockedResolver, mockedJwtDomainLinkageCredentialValidator))

    @Test
    fun `test linked domains with single domain as string successfully`() {
        val suppliedDidWithSingleServiceEndpoint =
            "did:ion:EiA8HR28m5KUig9elPRXkmKvvBGXcOoxpUrCscTdGJcIXQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDVDV5MG5nNTJCNzVjYWFqWU9qVjBRMmpxSng0NDZSajhRTjFpaHdteUpJZyIsInJlY292ZXJ5X2NvbW1pdG1lbnQiOiJFaURsOER4eXZLa3lvRmJsUWp0OXllU2J3TXkwR083MFM1R2FUU1F0UlF0aFJRIn0.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpRGFXS2sycjJiSWJsRWFpRUhtRU5Kc2h6czhtY1hJd2hTV0Z1YmtWQlJ3WWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljX2tleXMiOlt7ImlkIjoic2lnX2VkMmM1ZWRmIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJoTzhYaXhtWUxNOVVVMmFWOW9kc2VsSDNobDJtbVFPLS1GTzNKa2JrekVrIiwieSI6InBDWEpxbXpUbzVQQkdRTERibnRtdUFaSElZQnFZOG1DZVdkaWhpb0tGUmMifSwicHVycG9zZSI6WyJhdXRoIiwiZ2VuZXJhbCJdfV19fV19"
        val expectedResponseString =
            """{"@context":"https://www.w3.org/ns/did-resolution/v1","didDocument":{"id":"did:ion:EiA8HR28m5KUig9elPRXkmKvvBGXcOoxpUrCscTdGJcIXQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDVDV5MG5nNTJCNzVjYWFqWU9qVjBRMmpxSng0NDZSajhRTjFpaHdteUpJZyIsInJlY292ZXJ5X2NvbW1pdG1lbnQiOiJFaURsOER4eXZLa3lvRmJsUWp0OXllU2J3TXkwR083MFM1R2FUU1F0UlF0aFJRIn0.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpRGFXS2sycjJiSWJsRWFpRUhtRU5Kc2h6czhtY1hJd2hTV0Z1YmtWQlJ3WWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljX2tleXMiOlt7ImlkIjoic2lnX2VkMmM1ZWRmIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJoTzhYaXhtWUxNOVVVMmFWOW9kc2VsSDNobDJtbVFPLS1GTzNKa2JrekVrIiwieSI6InBDWEpxbXpUbzVQQkdRTERibnRtdUFaSElZQnFZOG1DZVdkaWhpb0tGUmMifSwicHVycG9zZSI6WyJhdXRoIiwiZ2VuZXJhbCJdfV19fV19","@context":["https://www.w3.org/ns/did/v1",{"@base":"did:ion:EiA8HR28m5KUig9elPRXkmKvvBGXcOoxpUrCscTdGJcIXQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDVDV5MG5nNTJCNzVjYWFqWU9qVjBRMmpxSng0NDZSajhRTjFpaHdteUpJZyIsInJlY292ZXJ5X2NvbW1pdG1lbnQiOiJFaURsOER4eXZLa3lvRmJsUWp0OXllU2J3TXkwR083MFM1R2FUU1F0UlF0aFJRIn0.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpRGFXS2sycjJiSWJsRWFpRUhtRU5Kc2h6czhtY1hJd2hTV0Z1YmtWQlJ3WWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljX2tleXMiOlt7ImlkIjoic2lnX2VkMmM1ZWRmIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJoTzhYaXhtWUxNOVVVMmFWOW9kc2VsSDNobDJtbVFPLS1GTzNKa2JrekVrIiwieSI6InBDWEpxbXpUbzVQQkdRTERibnRtdUFaSElZQnFZOG1DZVdkaWhpb0tGUmMifSwicHVycG9zZSI6WyJhdXRoIiwiZ2VuZXJhbCJdfV19fV19"}],"service":[{"id":"#linkeddomains","type":"LinkedDomains","serviceEndpoint":"https://issuertestng.com"}],"verificationMethod":[{"id":"#sig_ed2c5edf","controller":"","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"kty":"EC","crv":"secp256k1","x":"hO8XixmYLM9UU2aV9odselH3hl2mmQO--FO3JkbkzEk","y":"pCXJqmzTo5PBGQLDbntmuAZHIYBqY8mCeWdihioKFRc"}}],"authentication":["#sig_ed2c5edf"]},"methodMetadata":{"published":false,"recoveryCommitment":"EiDl8DxyvKkyoFblQjt9yeSbwMy0GO70S5GaTSQtRQthRQ","updateCommitment":"EiDaWKk2r2bIblEaiEHmENJshzs8mcXIwhSWFubkVBRwYg"},"resolverMetadata":{"driverId":"did:ion","driver":"HttpDriver","retrieved":"2020-10-25T06:39:09.486Z","duration":"117.3589ms"}}"""
        val expectedResponse = defaultTestSerializer.decodeFromString(IdentifierResponse.serializer(), expectedResponseString)
        val expectedWellKnownConfigDocumentResponse =
            """{"@context":"https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld","linked_dids":["eyJhbGciOiJFUzI1NksiLCJraWQiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkjc2lnX2VkMmM1ZWRmIn0.eyJzdWIiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkiLCJpc3MiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkiLCJuYmYiOjE2MDM0MTU2NjQsImV4cCI6MjM5MjMzNDA2NCwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL2lkZW50aXR5LmZvdW5kYXRpb24vLndlbGwta25vd24vY29udGV4dHMvZGlkLWNvbmZpZ3VyYXRpb24tdjAuMC5qc29ubGQiXSwiaXNzdWVyIjoiZGlkOmlvbjpFaUE4SFIyOG01S1VpZzllbFBSWGttS3Z2QkdYY09veHBVckNzY1RkR0pjSVhRPy1pb24taW5pdGlhbC1zdGF0ZT1leUprWld4MFlWOW9ZWE5vSWpvaVJXbERWRFY1TUc1bk5USkNOelZqWVdGcVdVOXFWakJSTW1weFNuZzBORFpTYWpoUlRqRnBhSGR0ZVVwSlp5SXNJbkpsWTI5MlpYSjVYMk52YlcxcGRHMWxiblFpT2lKRmFVUnNPRVI0ZVhaTGEzbHZSbUpzVVdwME9YbGxVMkozVFhrd1IwODNNRk0xUjJGVVUxRjBVbEYwYUZKUkluMC5leUoxY0dSaGRHVmZZMjl0YldsMGJXVnVkQ0k2SWtWcFJHRlhTMnN5Y2pKaVNXSnNSV0ZwUlVodFJVNUtjMmg2Y3podFkxaEpkMmhUVjBaMVltdFdRbEozV1djaUxDSndZWFJqYUdWeklqcGJleUpoWTNScGIyNGlPaUp5WlhCc1lXTmxJaXdpWkc5amRXMWxiblFpT25zaWNIVmliR2xqWDJ0bGVYTWlPbHQ3SW1sa0lqb2ljMmxuWDJWa01tTTFaV1JtSWl3aWRIbHdaU0k2SWtWalpITmhVMlZqY0RJMU5tc3hWbVZ5YVdacFkyRjBhVzl1UzJWNU1qQXhPU0lzSW1wM2F5STZleUpyZEhraU9pSkZReUlzSW1OeWRpSTZJbk5sWTNBeU5UWnJNU0lzSW5naU9pSm9UemhZYVhodFdVeE5PVlZWTW1GV09XOWtjMlZzU0ROb2JESnRiVkZQTFMxR1R6TkthMkpyZWtWcklpd2llU0k2SW5CRFdFcHhiWHBVYnpWUVFrZFJURVJpYm5SdGRVRmFTRWxaUW5GWk9HMURaVmRrYVdocGIwdEdVbU1pZlN3aWNIVnljRzl6WlNJNld5SmhkWFJvSWl3aVoyVnVaWEpoYkNKZGZWMTlmVjE5IiwiaXNzdWFuY2VEYXRlIjoiMjAyMC0xMC0yM1QwMToxNDoyNC43NzRaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDQ1LTEwLTIzVDAxOjE0OjI0Ljc3NFoiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9tYWluTGlua2FnZUNyZWRlbnRpYWwiXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkiLCJvcmlnaW4iOiJodHRwczovL2lzc3VlcnRlc3RuZy5jb20ifX19.luP4vIE30u_kj5CINDhbjZcsHDbEEXS5hMFnzd7qVKs2OtseDJlYcgLOgbCqI17v3edXx9OVkErQ-sSuIGvt8g"]}"""
        val expectedWellKnownConfigDocument =
            defaultTestSerializer.decodeFromString(LinkedDomainsResponse.serializer(), expectedWellKnownConfigDocumentResponse)
        val expectedDomainUrl = "https://issuertestng.com"
        val hostnameOfUrl = URI(expectedDomainUrl).host
        coEvery { mockedResolver.resolve(suppliedDidWithSingleServiceEndpoint) } returns Result.Success(expectedResponse.didDocument)
        coEvery { linkedDomainsService["getWellKnownConfigDocument"](expectedDomainUrl) } returns Result.Success(
            expectedWellKnownConfigDocument
        )
        coEvery { mockedJwtValidator.verifySignature(any()) } returns true
        coEvery { mockedJwtValidator.validateDidInHeaderAndPayload(any(), any()) } returns true
        runBlocking {
            val linkedDomainsResult = linkedDomainsService.fetchAndVerifyLinkedDomains(suppliedDidWithSingleServiceEndpoint)
            assertThat(linkedDomainsResult).isInstanceOf(Result.Success::class.java)
            assertThat((linkedDomainsResult as Result.Success).payload).isInstanceOf(LinkedDomainVerified::class.java)
            assertThat((linkedDomainsResult.payload as LinkedDomainVerified).domainUrl).isEqualTo(hostnameOfUrl)
        }
    }

    @Test
    fun `test linked domains with an array of domains successfully`() {
        val suppliedDidWithMultipleServiceEndpoints =
            "did:ion:EiA8HR28m5KUig9elPRXkmKvvBGXcOoxpUrCscTdGJcIXQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDVDV5MG5nNTJCNzVjYWFqWU9qVjBRMmpxSng0NDZSajhRTjFpaHdteUpJZyIsInJlY292ZXJ5X2NvbW1pdG1lbnQiOiJFaURsOER4eXZLa3lvRmJsUWp0OXllU2J3TXkwR083MFM1R2FUU1F0UlF0aFJRIn0.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpRGFXS2sycjJiSWJsRWFpRUhtRU5Kc2h6czhtY1hJd2hTV0Z1YmtWQlJ3WWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljX2tleXMiOlt7ImlkIjoic2lnX2VkMmM1ZWRmIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJoTzhYaXhtWUxNOVVVMmFWOW9kc2VsSDNobDJtbVFPLS1GTzNKa2JrekVrIiwieSI6InBDWEpxbXpUbzVQQkdRTERibnRtdUFaSElZQnFZOG1DZVdkaWhpb0tGUmMifSwicHVycG9zZSI6WyJhdXRoIiwiZ2VuZXJhbCJdfV19fV19"
        val expectedResponseString =
            """{"@context":"https://www.w3.org/ns/did-resolution/v1","didDocument":{"id":"did:ion:EiA8HR28m5KUig9elPRXkmKvvBGXcOoxpUrCscTdGJcIXQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDVDV5MG5nNTJCNzVjYWFqWU9qVjBRMmpxSng0NDZSajhRTjFpaHdteUpJZyIsInJlY292ZXJ5X2NvbW1pdG1lbnQiOiJFaURsOER4eXZLa3lvRmJsUWp0OXllU2J3TXkwR083MFM1R2FUU1F0UlF0aFJRIn0.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpRGFXS2sycjJiSWJsRWFpRUhtRU5Kc2h6czhtY1hJd2hTV0Z1YmtWQlJ3WWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljX2tleXMiOlt7ImlkIjoic2lnX2VkMmM1ZWRmIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJoTzhYaXhtWUxNOVVVMmFWOW9kc2VsSDNobDJtbVFPLS1GTzNKa2JrekVrIiwieSI6InBDWEpxbXpUbzVQQkdRTERibnRtdUFaSElZQnFZOG1DZVdkaWhpb0tGUmMifSwicHVycG9zZSI6WyJhdXRoIiwiZ2VuZXJhbCJdfV19fV19","@context":["https://www.w3.org/ns/did/v1",{"@base":"did:ion:EiA8HR28m5KUig9elPRXkmKvvBGXcOoxpUrCscTdGJcIXQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDVDV5MG5nNTJCNzVjYWFqWU9qVjBRMmpxSng0NDZSajhRTjFpaHdteUpJZyIsInJlY292ZXJ5X2NvbW1pdG1lbnQiOiJFaURsOER4eXZLa3lvRmJsUWp0OXllU2J3TXkwR083MFM1R2FUU1F0UlF0aFJRIn0.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpRGFXS2sycjJiSWJsRWFpRUhtRU5Kc2h6czhtY1hJd2hTV0Z1YmtWQlJ3WWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljX2tleXMiOlt7ImlkIjoic2lnX2VkMmM1ZWRmIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJoTzhYaXhtWUxNOVVVMmFWOW9kc2VsSDNobDJtbVFPLS1GTzNKa2JrekVrIiwieSI6InBDWEpxbXpUbzVQQkdRTERibnRtdUFaSElZQnFZOG1DZVdkaWhpb0tGUmMifSwicHVycG9zZSI6WyJhdXRoIiwiZ2VuZXJhbCJdfV19fV19"}],"service":[{"id":"#linkeddomains","type":"LinkedDomains","serviceEndpoint": {"origins":["https://issuertestng.com"]}}],"verificationMethod":[{"id":"#sig_ed2c5edf","controller":"","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"kty":"EC","crv":"secp256k1","x":"hO8XixmYLM9UU2aV9odselH3hl2mmQO--FO3JkbkzEk","y":"pCXJqmzTo5PBGQLDbntmuAZHIYBqY8mCeWdihioKFRc"}}],"authentication":["#sig_ed2c5edf"]},"methodMetadata":{"published":false,"recoveryCommitment":"EiDl8DxyvKkyoFblQjt9yeSbwMy0GO70S5GaTSQtRQthRQ","updateCommitment":"EiDaWKk2r2bIblEaiEHmENJshzs8mcXIwhSWFubkVBRwYg"},"resolverMetadata":{"driverId":"did:ion","driver":"HttpDriver","retrieved":"2020-10-25T06:39:09.486Z","duration":"117.3589ms"}}"""
        val expectedResponse = defaultTestSerializer.decodeFromString(IdentifierResponse.serializer(), expectedResponseString)
        val expectedWellKnownConfigDocumentResponse =
            """{"@context":"https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld","linked_dids":["eyJhbGciOiJFUzI1NksiLCJraWQiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkjc2lnX2VkMmM1ZWRmIn0.eyJzdWIiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkiLCJpc3MiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkiLCJuYmYiOjE2MDM0MTU2NjQsImV4cCI6MjM5MjMzNDA2NCwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL2lkZW50aXR5LmZvdW5kYXRpb24vLndlbGwta25vd24vY29udGV4dHMvZGlkLWNvbmZpZ3VyYXRpb24tdjAuMC5qc29ubGQiXSwiaXNzdWVyIjoiZGlkOmlvbjpFaUE4SFIyOG01S1VpZzllbFBSWGttS3Z2QkdYY09veHBVckNzY1RkR0pjSVhRPy1pb24taW5pdGlhbC1zdGF0ZT1leUprWld4MFlWOW9ZWE5vSWpvaVJXbERWRFY1TUc1bk5USkNOelZqWVdGcVdVOXFWakJSTW1weFNuZzBORFpTYWpoUlRqRnBhSGR0ZVVwSlp5SXNJbkpsWTI5MlpYSjVYMk52YlcxcGRHMWxiblFpT2lKRmFVUnNPRVI0ZVhaTGEzbHZSbUpzVVdwME9YbGxVMkozVFhrd1IwODNNRk0xUjJGVVUxRjBVbEYwYUZKUkluMC5leUoxY0dSaGRHVmZZMjl0YldsMGJXVnVkQ0k2SWtWcFJHRlhTMnN5Y2pKaVNXSnNSV0ZwUlVodFJVNUtjMmg2Y3podFkxaEpkMmhUVjBaMVltdFdRbEozV1djaUxDSndZWFJqYUdWeklqcGJleUpoWTNScGIyNGlPaUp5WlhCc1lXTmxJaXdpWkc5amRXMWxiblFpT25zaWNIVmliR2xqWDJ0bGVYTWlPbHQ3SW1sa0lqb2ljMmxuWDJWa01tTTFaV1JtSWl3aWRIbHdaU0k2SWtWalpITmhVMlZqY0RJMU5tc3hWbVZ5YVdacFkyRjBhVzl1UzJWNU1qQXhPU0lzSW1wM2F5STZleUpyZEhraU9pSkZReUlzSW1OeWRpSTZJbk5sWTNBeU5UWnJNU0lzSW5naU9pSm9UemhZYVhodFdVeE5PVlZWTW1GV09XOWtjMlZzU0ROb2JESnRiVkZQTFMxR1R6TkthMkpyZWtWcklpd2llU0k2SW5CRFdFcHhiWHBVYnpWUVFrZFJURVJpYm5SdGRVRmFTRWxaUW5GWk9HMURaVmRrYVdocGIwdEdVbU1pZlN3aWNIVnljRzl6WlNJNld5SmhkWFJvSWl3aVoyVnVaWEpoYkNKZGZWMTlmVjE5IiwiaXNzdWFuY2VEYXRlIjoiMjAyMC0xMC0yM1QwMToxNDoyNC43NzRaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDQ1LTEwLTIzVDAxOjE0OjI0Ljc3NFoiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9tYWluTGlua2FnZUNyZWRlbnRpYWwiXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6aW9uOkVpQThIUjI4bTVLVWlnOWVsUFJYa21LdnZCR1hjT294cFVyQ3NjVGRHSmNJWFE_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFZEVjVNRzVuTlRKQ056VmpZV0ZxV1U5cVZqQlJNbXB4U25nME5EWlNhamhSVGpGcGFIZHRlVXBKWnlJc0luSmxZMjkyWlhKNVgyTnZiVzFwZEcxbGJuUWlPaUpGYVVSc09FUjRlWFpMYTNsdlJtSnNVV3AwT1hsbFUySjNUWGt3UjA4M01GTTFSMkZVVTFGMFVsRjBhRkpSSW4wLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUkdGWFMyc3ljakppU1dKc1JXRnBSVWh0UlU1S2MyaDZjemh0WTFoSmQyaFRWMFoxWW10V1FsSjNXV2NpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMlZrTW1NMVpXUm1JaXdpZEhsd1pTSTZJa1ZqWkhOaFUyVmpjREkxTm1zeFZtVnlhV1pwWTJGMGFXOXVTMlY1TWpBeE9TSXNJbXAzYXlJNmV5SnJkSGtpT2lKRlF5SXNJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbmdpT2lKb1R6aFlhWGh0V1V4Tk9WVlZNbUZXT1c5a2MyVnNTRE5vYkRKdGJWRlBMUzFHVHpOS2EySnJla1ZySWl3aWVTSTZJbkJEV0VweGJYcFVielZRUWtkUlRFUmliblJ0ZFVGYVNFbFpRbkZaT0cxRFpWZGthV2hwYjB0R1VtTWlmU3dpY0hWeWNHOXpaU0k2V3lKaGRYUm9JaXdpWjJWdVpYSmhiQ0pkZlYxOWZWMTkiLCJvcmlnaW4iOiJodHRwczovL2lzc3VlcnRlc3RuZy5jb20ifX19.luP4vIE30u_kj5CINDhbjZcsHDbEEXS5hMFnzd7qVKs2OtseDJlYcgLOgbCqI17v3edXx9OVkErQ-sSuIGvt8g"]}"""
        val expectedWellKnownConfigDocument =
            defaultTestSerializer.decodeFromString(LinkedDomainsResponse.serializer(), expectedWellKnownConfigDocumentResponse)
        val expectedDomainUrl = "https://issuertestng.com"
        val hostnameOfUrl = URI(expectedDomainUrl).host
        coEvery { mockedResolver.resolve(suppliedDidWithMultipleServiceEndpoints) } returns Result.Success(expectedResponse.didDocument)
        coEvery { linkedDomainsService["getWellKnownConfigDocument"](expectedDomainUrl) } returns Result.Success(
            expectedWellKnownConfigDocument
        )
        coEvery { mockedJwtValidator.verifySignature(any()) } returns true
        coEvery { mockedJwtValidator.validateDidInHeaderAndPayload(any(), any()) } returns true
        runBlocking {
            val linkedDomainsArrResult = linkedDomainsService.fetchAndVerifyLinkedDomains(suppliedDidWithMultipleServiceEndpoints)
            assertThat(linkedDomainsArrResult).isInstanceOf(Result.Success::class.java)
            assertThat((linkedDomainsArrResult as Result.Success).payload).isInstanceOf(LinkedDomainVerified::class.java)
            assertThat((linkedDomainsArrResult.payload as LinkedDomainVerified).domainUrl).isEqualTo(hostnameOfUrl)
        }
    }

    @Test
    fun `test did without service endpoints`() {
        val suppliedDidWithoutServiceEndpoint =
            "did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ"
        val actualDidDocString =
            """{"@context":"https://www.w3.org/ns/did-resolution/v1","didDocument":{"id":"did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ","@context":["https://www.w3.org/ns/did/v1",{"@base":"did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ"}],"verificationMethod":[{"id":"#RU4_sign_ION_1","controller":"did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"crv":"secp256k1","kty":"EC","x":"3lNU_20ntDxp_fpgl4LPGmaG8sC8O-v7P2vNphm4GpU","y":"LsIIx_YNwIlgPCjclnIARs-Q8mJW7gC492p3Pw9gAZM"}}],"authentication":["did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ#RU4_sign_ION_1"]},"methodMetadata":{"published":false,"recoveryCommitment":"EiDNWAIs4rx7yjQKQLFQ1gc1MIkH1PETj7yCZX66rmjz5A","updateCommitment":"EiD4fd7FQM8ZkS0_qT5okF9ORwzqKH6EIPzYdgShHc88_g"},"resolverMetadata":{"duration":403.544624,"identifier":"did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ","driverId":"discover.did.microsoft.com/did:ion","didUrl":{"didUrlString":"did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ","did":{"didString":"did:ion:EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ","method":"ion","methodSpecificId":"EiBFVG2BhADKN48GNNhD-y0EgrcjluWJg7tQbpe1rv6kMQ:eyJkZWx0YSI6eyJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJSVTRfc2lnbl9JT05fMSIsInB1YmxpY0tleUp3ayI6eyJjcnYiOiJzZWNwMjU2azEiLCJrdHkiOiJFQyIsIngiOiIzbE5VXzIwbnREeHBfZnBnbDRMUEdtYUc4c0M4Ty12N1Aydk5waG00R3BVIiwieSI6IkxzSUl4X1lOd0lsZ1BDamNsbklBUnMtUThtSlc3Z0M0OTJwM1B3OWdBWk0ifSwicHVycG9zZXMiOlsiYXV0aGVudGljYXRpb24iXSwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSJ9XX19XSwidXBkYXRlQ29tbWl0bWVudCI6IkVpRDRmZDdGUU04WmtTMF9xVDVva0Y5T1J3enFLSDZFSVB6WWRnU2hIYzg4X2cifSwic3VmZml4RGF0YSI6eyJkZWx0YUhhc2giOiJFaURCSFA5RDNLcXBHWE9pTmlhR01rb3pGOEVZNWxRdFVyaW0zcDBVaUEweGxRIiwicmVjb3ZlcnlDb21taXRtZW50IjoiRWlETldBSXM0cng3eWpRS1FMRlExZ2MxTUlrSDFQRVRqN3lDWlg2NnJtano1QSJ9fQ","parseTree":null,"parseRuleCount":null},"parameters":null,"parametersMap":{},"path":"","query":null,"fragment":null,"parseTree":null,"parseRuleCount":null}}}"""
        val actualDidDoc = defaultTestSerializer.decodeFromString(IdentifierResponse.serializer(), actualDidDocString)
        coEvery { mockedResolver.resolve(suppliedDidWithoutServiceEndpoint) } returns Result.Success(actualDidDoc.didDocument)
        runBlocking {
            val actualDomainUrlResult = linkedDomainsService.fetchAndVerifyLinkedDomains(suppliedDidWithoutServiceEndpoint)
            assertThat(actualDomainUrlResult).isInstanceOf(Result.Success::class.java)
            assertThat((actualDomainUrlResult as Result.Success).payload).isInstanceOf(LinkedDomainMissing::class.java)
        }
    }

    @Test
    fun `test failing signature verification mocking network call`() {
        val rpDid =
            "did:ion:EiBGMAR43ZWai9JKvh31ShjvNaX0dYRYI0XtLnZIa88CqQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlCYllRMEViTmNtMnJkc2dBMndJM0FRQTRWRlFSUTVYSnk5QzFTOWV3elFBQSIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJNRGE4djdNNC1ETi1WeTZaWVlsUFluUHR3dFRNanZFOUgzLXdYWDJWSktjIiwieSI6IkJDcG1SNnBla0p2QnFFYnBINExwbnVMd1NKTEdkck5QcjNBaFdJR21iWDQifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpREM3Y0J2Unp3US1CZkhSQ2x1dG5MQU8wUlZyS3V6c0pTSEFtXzhFTERocVEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQXNsRml6MWNRU3RranluUy03eERUbGtLOExvZ01FLWc2bkFBXy0wREVyWGciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJWYThfc2lnbl9JT05fMSIsInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4IjoiaEEzRWFaanZnR3BpMUFuV21TRXpQaGhlSTU1TXpoZHdEVXRYY0FTMzZGayIsInkiOiJFNDRwSnA3X21kNlo2LXlEbmdPSzlMWWFXX0xUQzhCWGdTVk1RQ1plTnJBIn0sInVzYWdlIjpbIm9wcyIsImF1dGgiLCJnZW5lcmFsIl19XX19XX0"
        val rpDidDoc =
            """{"@context":"https://www.w3.org/ns/did-resolution/v1","didDocument":{"id":"did:ion:EiBGMAR43ZWai9JKvh31ShjvNaX0dYRYI0XtLnZIa88CqQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlCYllRMEViTmNtMnJkc2dBMndJM0FRQTRWRlFSUTVYSnk5QzFTOWV3elFBQSIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJNRGE4djdNNC1ETi1WeTZaWVlsUFluUHR3dFRNanZFOUgzLXdYWDJWSktjIiwieSI6IkJDcG1SNnBla0p2QnFFYnBINExwbnVMd1NKTEdkck5QcjNBaFdJR21iWDQifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpREM3Y0J2Unp3US1CZkhSQ2x1dG5MQU8wUlZyS3V6c0pTSEFtXzhFTERocVEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQXNsRml6MWNRU3RranluUy03eERUbGtLOExvZ01FLWc2bkFBXy0wREVyWGciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJWYThfc2lnbl9JT05fMSIsInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4IjoiaEEzRWFaanZnR3BpMUFuV21TRXpQaGhlSTU1TXpoZHdEVXRYY0FTMzZGayIsInkiOiJFNDRwSnA3X21kNlo2LXlEbmdPSzlMWWFXX0xUQzhCWGdTVk1RQ1plTnJBIn0sInVzYWdlIjpbIm9wcyIsImF1dGgiLCJnZW5lcmFsIl19XX19XX0","@context":["https://www.w3.org/ns/did/v1",{"@base":"did:ion:EiBGMAR43ZWai9JKvh31ShjvNaX0dYRYI0XtLnZIa88CqQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlCYllRMEViTmNtMnJkc2dBMndJM0FRQTRWRlFSUTVYSnk5QzFTOWV3elFBQSIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJNRGE4djdNNC1ETi1WeTZaWVlsUFluUHR3dFRNanZFOUgzLXdYWDJWSktjIiwieSI6IkJDcG1SNnBla0p2QnFFYnBINExwbnVMd1NKTEdkck5QcjNBaFdJR21iWDQifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpREM3Y0J2Unp3US1CZkhSQ2x1dG5MQU8wUlZyS3V6c0pTSEFtXzhFTERocVEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQXNsRml6MWNRU3RranluUy03eERUbGtLOExvZ01FLWc2bkFBXy0wREVyWGciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJWYThfc2lnbl9JT05fMSIsInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4IjoiaEEzRWFaanZnR3BpMUFuV21TRXpQaGhlSTU1TXpoZHdEVXRYY0FTMzZGayIsInkiOiJFNDRwSnA3X21kNlo2LXlEbmdPSzlMWWFXX0xUQzhCWGdTVk1RQ1plTnJBIn0sInVzYWdlIjpbIm9wcyIsImF1dGgiLCJnZW5lcmFsIl19XX19XX0"}],"service":[{"id":"#anyServiceEndpointId","type":"LinkedDomains","serviceEndpoint":"http://any.endpoint"}],"verificationMethod":[{"id":"#Va8_sign_ION_1","controller":"","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"kty":"EC","crv":"secp256k1","x":"hA3EaZjvgGpi1AnWmSEzPhheI55MzhdwDUtXcAS36Fk","y":"E44pJp7_md6Z6-yDngOK9LYaW_LTC8BXgSVMQCZeNrA"}}],"authentication":["#Va8_sign_ION_1"]},"methodMetadata":{"operationPublicKeys":[{"id":"#Va8_sign_ION_1","controller":"","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"kty":"EC","crv":"secp256k1","x":"hA3EaZjvgGpi1AnWmSEzPhheI55MzhdwDUtXcAS36Fk","y":"E44pJp7_md6Z6-yDngOK9LYaW_LTC8BXgSVMQCZeNrA"}}],"recoveryKey":{"kty":"EC","crv":"secp256k1","x":"MDa8v7M4-DN-Vy6ZYYlPYnPtwtTMjvE9H3-wXX2VJKc","y":"BCpmR6pekJvBqEbpH4LpnuLwSJLGdrNPr3AhWIGmbX4"}},"resolverMetadata":{"driverId":"did:ion","driver":"HttpDriver","retrieved":"2020-05-31T09:20:41.162Z","duration":"118.4098ms"}}"""
        val wellKnownDoc =
            "eyJhbGciOiJFUzI1NksiLCJraWQiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRI3NpZ19hZDg0ZGYyMyJ9.eyJzdWIiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRIiwiaXNzIjoiZGlkOmlvbjpFaUQ4OWl1dDhQTWhSejV6U2xQbF96a0hnRWZSQmlBOXpkWFl3QWRyazFfSllnOmV5SmtaV3gwWVNJNmV5SndZWFJqYUdWeklqcGJleUpoWTNScGIyNGlPaUp5WlhCc1lXTmxJaXdpWkc5amRXMWxiblFpT25zaWNIVmliR2xqWDJ0bGVYTWlPbHQ3SW1sa0lqb2ljMmxuWDJGa09EUmtaakl6SWl3aWFuZHJJanA3SW1OeWRpSTZJbk5sWTNBeU5UWnJNU0lzSW10MGVTSTZJa1ZESWl3aWVDSTZJbGxNTTJ4bE5DMTJZbE5zYTJaSU5uSm9RV0psYkVKWFREQnlWbEJpZVZKWVRHdElVbXgzUkVGWk9UUWlMQ0o1SWpvaVlXRkRaRzFpZGpGMFIxaHRaVTFRV1VkVVkwWnFMVUZuYzJkMmMyUk5MWGxHUjJ0blZVMVFYMDR0VlNKOUxDSndkWEp3YjNObElqcGJJbUYxZEdnaUxDSm5aVzVsY21Gc0lsMHNJblI1Y0dVaU9pSkZZMlJ6WVZObFkzQXlOVFpyTVZabGNtbG1hV05oZEdsdmJrdGxlVEl3TVRraWZWMHNJbk5sY25acFkyVmZaVzVrY0c5cGJuUnpJanBiZXlKbGJtUndiMmx1ZENJNmV5SnZjbWxuYVc1eklqcGJJbWgwZEhCek9pOHZZMjl1ZEc5emIzVnVhWFpsY25OcGRIa3RaR2xrWkdWdGJ5NWhlblZ5WlhkbFluTnBkR1Z6TG01bGRDOGlYWDBzSW1sa0lqb2liR2x1YTJWa1pHOXRZV2x1Y3lJc0luUjVjR1VpT2lKTWFXNXJaV1JFYjIxaGFXNXpJbjFkZlgxZExDSjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUVMxSFNGSlJWa2N4VjJGMGJHcHJTVlF4T0d4dmJXWlhiVFkwTjJRd1ltdGxSbXBDUjJ0TVVqWk1SWGNpZlN3aWMzVm1abWw0WDJSaGRHRWlPbnNpWkdWc2RHRmZhR0Z6YUNJNklrVnBRWEJ0YTBkcGEyUmlYM3BIYjFKclZVNXZibWQwVFhKbFpTMXhUamhQZUV0c1ZtSnZZVWs1Wkc5RGRYY2lMQ0p5WldOdmRtVnllVjlqYjIxdGFYUnRaVzUwSWpvaVJXbENiMTl2VmtKWVNFSm1aR2hmUkZwa1pqbHFVM1p3UTFsblJtTmtjWGMzY0RaRmExcFBhblUzYlVSRVFTSjlmUSIsIm5iZiI6MTYwNzk4ODE5OSwiZXhwIjoyMzk2OTA2NTk5LCJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vaWRlbnRpdHkuZm91bmRhdGlvbi8ud2VsbC1rbm93bi9jb250ZXh0cy9kaWQtY29uZmlndXJhdGlvbi12MC4wLmpzb25sZCJdLCJpc3N1ZXIiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRIiwiaXNzdWFuY2VEYXRlIjoiMjAyMC0xMi0xNFQyMzoyMzoxOS40NzZaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDQ1LTEyLTE0VDIzOjIzOjE5LjQ3NloiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9tYWluTGlua2FnZUNyZWRlbnRpYWwiXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRIiwib3JpZ2luIjoiaHR0cHM6Ly9jb250b3NvdW5pdmVyc2l0eS1kaWRkZW1vLmF6dXJld2Vic2l0ZXMubmV0LyJ9fX0.PPRATSXicMcMIGe8Y_c8YZIA9VYXZsu8UMvfG6ZtZ0Hp_XVc9N9ZzxemAxCMj9wkz-l5ssuTgYOSzLQdXLP1Zw"
        mockkConstructor(FetchWellKnownConfigDocumentNetworkOperation::class)
        coEvery { anyConstructed<FetchWellKnownConfigDocumentNetworkOperation>().fire() } returns Result.Success(
            LinkedDomainsResponse(
                "",
                listOf(wellKnownDoc)
            )
        )
        coEvery { mockedJwtValidator.verifySignature(any()) } returns false
        coEvery { mockedResolver.resolve(rpDid) } returns Result.Success(
            defaultTestSerializer.decodeFromString(
                IdentifierResponse.serializer(),
                rpDidDoc
            ).didDocument
        )
        runBlocking {
            val actualWellKnownConfigDoc = linkedDomainsService.fetchAndVerifyLinkedDomains(rpDid)
            assertThat(actualWellKnownConfigDoc).isInstanceOf(Result.Success::class.java)
            assertThat((actualWellKnownConfigDoc as Result.Success).payload).isInstanceOf(LinkedDomainUnVerified::class.java)
        }
        coVerify(exactly = 1) {
            anyConstructed<FetchWellKnownConfigDocumentNetworkOperation>().fire()
        }
    }

    @Test
    fun `test linked domains not matching case mocking network call`() {
        val rpDid =
            "did:ion:EiBGMAR43ZWai9JKvh31ShjvNaX0dYRYI0XtLnZIa88CqQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlCYllRMEViTmNtMnJkc2dBMndJM0FRQTRWRlFSUTVYSnk5QzFTOWV3elFBQSIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJNRGE4djdNNC1ETi1WeTZaWVlsUFluUHR3dFRNanZFOUgzLXdYWDJWSktjIiwieSI6IkJDcG1SNnBla0p2QnFFYnBINExwbnVMd1NKTEdkck5QcjNBaFdJR21iWDQifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpREM3Y0J2Unp3US1CZkhSQ2x1dG5MQU8wUlZyS3V6c0pTSEFtXzhFTERocVEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQXNsRml6MWNRU3RranluUy03eERUbGtLOExvZ01FLWc2bkFBXy0wREVyWGciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJWYThfc2lnbl9JT05fMSIsInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4IjoiaEEzRWFaanZnR3BpMUFuV21TRXpQaGhlSTU1TXpoZHdEVXRYY0FTMzZGayIsInkiOiJFNDRwSnA3X21kNlo2LXlEbmdPSzlMWWFXX0xUQzhCWGdTVk1RQ1plTnJBIn0sInVzYWdlIjpbIm9wcyIsImF1dGgiLCJnZW5lcmFsIl19XX19XX0"
        val rpDidDoc =
            """{"@context":"https://www.w3.org/ns/did-resolution/v1","didDocument":{"id":"did:ion:EiBGMAR43ZWai9JKvh31ShjvNaX0dYRYI0XtLnZIa88CqQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlCYllRMEViTmNtMnJkc2dBMndJM0FRQTRWRlFSUTVYSnk5QzFTOWV3elFBQSIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJNRGE4djdNNC1ETi1WeTZaWVlsUFluUHR3dFRNanZFOUgzLXdYWDJWSktjIiwieSI6IkJDcG1SNnBla0p2QnFFYnBINExwbnVMd1NKTEdkck5QcjNBaFdJR21iWDQifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpREM3Y0J2Unp3US1CZkhSQ2x1dG5MQU8wUlZyS3V6c0pTSEFtXzhFTERocVEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQXNsRml6MWNRU3RranluUy03eERUbGtLOExvZ01FLWc2bkFBXy0wREVyWGciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJWYThfc2lnbl9JT05fMSIsInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4IjoiaEEzRWFaanZnR3BpMUFuV21TRXpQaGhlSTU1TXpoZHdEVXRYY0FTMzZGayIsInkiOiJFNDRwSnA3X21kNlo2LXlEbmdPSzlMWWFXX0xUQzhCWGdTVk1RQ1plTnJBIn0sInVzYWdlIjpbIm9wcyIsImF1dGgiLCJnZW5lcmFsIl19XX19XX0","@context":["https://www.w3.org/ns/did/v1",{"@base":"did:ion:EiBGMAR43ZWai9JKvh31ShjvNaX0dYRYI0XtLnZIa88CqQ?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlCYllRMEViTmNtMnJkc2dBMndJM0FRQTRWRlFSUTVYSnk5QzFTOWV3elFBQSIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJNRGE4djdNNC1ETi1WeTZaWVlsUFluUHR3dFRNanZFOUgzLXdYWDJWSktjIiwieSI6IkJDcG1SNnBla0p2QnFFYnBINExwbnVMd1NKTEdkck5QcjNBaFdJR21iWDQifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpREM3Y0J2Unp3US1CZkhSQ2x1dG5MQU8wUlZyS3V6c0pTSEFtXzhFTERocVEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQXNsRml6MWNRU3RranluUy03eERUbGtLOExvZ01FLWc2bkFBXy0wREVyWGciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJWYThfc2lnbl9JT05fMSIsInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJzZWNwMjU2azEiLCJ4IjoiaEEzRWFaanZnR3BpMUFuV21TRXpQaGhlSTU1TXpoZHdEVXRYY0FTMzZGayIsInkiOiJFNDRwSnA3X21kNlo2LXlEbmdPSzlMWWFXX0xUQzhCWGdTVk1RQ1plTnJBIn0sInVzYWdlIjpbIm9wcyIsImF1dGgiLCJnZW5lcmFsIl19XX19XX0"}],"service":[{"id":"#anyServiceEndpointId","type":"LinkedDomains","serviceEndpoint":"http://any.endpoint"}],"verificationMethod":[{"id":"#Va8_sign_ION_1","controller":"","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"kty":"EC","crv":"secp256k1","x":"hA3EaZjvgGpi1AnWmSEzPhheI55MzhdwDUtXcAS36Fk","y":"E44pJp7_md6Z6-yDngOK9LYaW_LTC8BXgSVMQCZeNrA"}}],"authentication":["#Va8_sign_ION_1"]},"methodMetadata":{"operationPublicKeys":[{"id":"#Va8_sign_ION_1","controller":"","type":"EcdsaSecp256k1VerificationKey2019","publicKeyJwk":{"kty":"EC","crv":"secp256k1","x":"hA3EaZjvgGpi1AnWmSEzPhheI55MzhdwDUtXcAS36Fk","y":"E44pJp7_md6Z6-yDngOK9LYaW_LTC8BXgSVMQCZeNrA"}}],"recoveryKey":{"kty":"EC","crv":"secp256k1","x":"MDa8v7M4-DN-Vy6ZYYlPYnPtwtTMjvE9H3-wXX2VJKc","y":"BCpmR6pekJvBqEbpH4LpnuLwSJLGdrNPr3AhWIGmbX4"}},"resolverMetadata":{"driverId":"did:ion","driver":"HttpDriver","retrieved":"2020-05-31T09:20:41.162Z","duration":"118.4098ms"}}"""
        val wellKnownDoc =
            "eyJhbGciOiJFUzI1NksiLCJraWQiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRI3NpZ19hZDg0ZGYyMyJ9.eyJzdWIiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRIiwiaXNzIjoiZGlkOmlvbjpFaUQ4OWl1dDhQTWhSejV6U2xQbF96a0hnRWZSQmlBOXpkWFl3QWRyazFfSllnOmV5SmtaV3gwWVNJNmV5SndZWFJqYUdWeklqcGJleUpoWTNScGIyNGlPaUp5WlhCc1lXTmxJaXdpWkc5amRXMWxiblFpT25zaWNIVmliR2xqWDJ0bGVYTWlPbHQ3SW1sa0lqb2ljMmxuWDJGa09EUmtaakl6SWl3aWFuZHJJanA3SW1OeWRpSTZJbk5sWTNBeU5UWnJNU0lzSW10MGVTSTZJa1ZESWl3aWVDSTZJbGxNTTJ4bE5DMTJZbE5zYTJaSU5uSm9RV0psYkVKWFREQnlWbEJpZVZKWVRHdElVbXgzUkVGWk9UUWlMQ0o1SWpvaVlXRkRaRzFpZGpGMFIxaHRaVTFRV1VkVVkwWnFMVUZuYzJkMmMyUk5MWGxHUjJ0blZVMVFYMDR0VlNKOUxDSndkWEp3YjNObElqcGJJbUYxZEdnaUxDSm5aVzVsY21Gc0lsMHNJblI1Y0dVaU9pSkZZMlJ6WVZObFkzQXlOVFpyTVZabGNtbG1hV05oZEdsdmJrdGxlVEl3TVRraWZWMHNJbk5sY25acFkyVmZaVzVrY0c5cGJuUnpJanBiZXlKbGJtUndiMmx1ZENJNmV5SnZjbWxuYVc1eklqcGJJbWgwZEhCek9pOHZZMjl1ZEc5emIzVnVhWFpsY25OcGRIa3RaR2xrWkdWdGJ5NWhlblZ5WlhkbFluTnBkR1Z6TG01bGRDOGlYWDBzSW1sa0lqb2liR2x1YTJWa1pHOXRZV2x1Y3lJc0luUjVjR1VpT2lKTWFXNXJaV1JFYjIxaGFXNXpJbjFkZlgxZExDSjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUVMxSFNGSlJWa2N4VjJGMGJHcHJTVlF4T0d4dmJXWlhiVFkwTjJRd1ltdGxSbXBDUjJ0TVVqWk1SWGNpZlN3aWMzVm1abWw0WDJSaGRHRWlPbnNpWkdWc2RHRmZhR0Z6YUNJNklrVnBRWEJ0YTBkcGEyUmlYM3BIYjFKclZVNXZibWQwVFhKbFpTMXhUamhQZUV0c1ZtSnZZVWs1Wkc5RGRYY2lMQ0p5WldOdmRtVnllVjlqYjIxdGFYUnRaVzUwSWpvaVJXbENiMTl2VmtKWVNFSm1aR2hmUkZwa1pqbHFVM1p3UTFsblJtTmtjWGMzY0RaRmExcFBhblUzYlVSRVFTSjlmUSIsIm5iZiI6MTYwNzk4ODE5OSwiZXhwIjoyMzk2OTA2NTk5LCJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vaWRlbnRpdHkuZm91bmRhdGlvbi8ud2VsbC1rbm93bi9jb250ZXh0cy9kaWQtY29uZmlndXJhdGlvbi12MC4wLmpzb25sZCJdLCJpc3N1ZXIiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRIiwiaXNzdWFuY2VEYXRlIjoiMjAyMC0xMi0xNFQyMzoyMzoxOS40NzZaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDQ1LTEyLTE0VDIzOjIzOjE5LjQ3NloiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiRG9tYWluTGlua2FnZUNyZWRlbnRpYWwiXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6aW9uOkVpRDg5aXV0OFBNaFJ6NXpTbFBsX3prSGdFZlJCaUE5emRYWXdBZHJrMV9KWWc6ZXlKa1pXeDBZU0k2ZXlKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpYMnRsZVhNaU9sdDdJbWxrSWpvaWMybG5YMkZrT0RSa1pqSXpJaXdpYW5kcklqcDdJbU55ZGlJNkluTmxZM0F5TlRack1TSXNJbXQwZVNJNklrVkRJaXdpZUNJNklsbE1NMnhsTkMxMllsTnNhMlpJTm5Kb1FXSmxiRUpYVERCeVZsQmllVkpZVEd0SVVteDNSRUZaT1RRaUxDSjVJam9pWVdGRFpHMWlkakYwUjFodFpVMVFXVWRVWTBacUxVRm5jMmQyYzJSTkxYbEdSMnRuVlUxUVgwNHRWU0o5TENKd2RYSndiM05sSWpwYkltRjFkR2dpTENKblpXNWxjbUZzSWwwc0luUjVjR1VpT2lKRlkyUnpZVk5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGtpZlYwc0luTmxjblpwWTJWZlpXNWtjRzlwYm5SeklqcGJleUpsYm1Sd2IybHVkQ0k2ZXlKdmNtbG5hVzV6SWpwYkltaDBkSEJ6T2k4dlkyOXVkRzl6YjNWdWFYWmxjbk5wZEhrdFpHbGtaR1Z0Ynk1aGVuVnlaWGRsWW5OcGRHVnpMbTVsZEM4aVhYMHNJbWxrSWpvaWJHbHVhMlZrWkc5dFlXbHVjeUlzSW5SNWNHVWlPaUpNYVc1clpXUkViMjFoYVc1ekluMWRmWDFkTENKMWNHUmhkR1ZmWTI5dGJXbDBiV1Z1ZENJNklrVnBRUzFIU0ZKUlZrY3hWMkYwYkdwclNWUXhPR3h2YldaWGJUWTBOMlF3WW10bFJtcENSMnRNVWpaTVJYY2lmU3dpYzNWbVptbDRYMlJoZEdFaU9uc2laR1ZzZEdGZmFHRnphQ0k2SWtWcFFYQnRhMGRwYTJSaVgzcEhiMUpyVlU1dmJtZDBUWEpsWlMxeFRqaFBlRXRzVm1KdllVazVaRzlEZFhjaUxDSnlaV052ZG1WeWVWOWpiMjF0YVhSdFpXNTBJam9pUldsQ2IxOXZWa0pZU0VKbVpHaGZSRnBrWmpscVUzWndRMWxuUm1Oa2NYYzNjRFpGYTFwUGFuVTNiVVJFUVNKOWZRIiwib3JpZ2luIjoiaHR0cHM6Ly9jb250b3NvdW5pdmVyc2l0eS1kaWRkZW1vLmF6dXJld2Vic2l0ZXMubmV0LyJ9fX0.PPRATSXicMcMIGe8Y_c8YZIA9VYXZsu8UMvfG6ZtZ0Hp_XVc9N9ZzxemAxCMj9wkz-l5ssuTgYOSzLQdXLP1Zw"
        mockkConstructor(FetchWellKnownConfigDocumentNetworkOperation::class)
        coEvery { anyConstructed<FetchWellKnownConfigDocumentNetworkOperation>().fire() } returns Result.Success(
            LinkedDomainsResponse(
                "",
                listOf(wellKnownDoc)
            )
        )
        coEvery { mockedJwtValidator.verifySignature(any()) } returns true
        coEvery { mockedJwtValidator.validateDidInHeaderAndPayload(any(), any()) } returns false
        coEvery { mockedResolver.resolve(rpDid) } returns Result.Success(
            defaultTestSerializer.decodeFromString(
                IdentifierResponse.serializer(),
                rpDidDoc
            ).didDocument
        )
        runBlocking {
            val actualWellKnownConfigDoc = linkedDomainsService.fetchAndVerifyLinkedDomains(rpDid)
            assertThat(actualWellKnownConfigDoc).isInstanceOf(Result.Success::class.java)
            assertThat((actualWellKnownConfigDoc as Result.Success).payload).isInstanceOf(LinkedDomainUnVerified::class.java)
        }
        coVerify(exactly = 1) {
            anyConstructed<FetchWellKnownConfigDocumentNetworkOperation>().fire()
        }
    }
}